package tester;

public class Test1_Queue_Files {

    public static void main(String[] args) throws Exception {
//        Queue<Integer> q = new LinkedList<>();
//
//        // Adds elements {0, 1, 2, 3, 4} to
//        // the queue
//        for (int i = 0; i < 5; i++) {
//            q.add(i);
//        }
//
//        // Display contents of the queue.
//        System.out.println("Elements of queue :" + q);
//
//        // To remove the head of queue.
//        int removedele = q.poll();
//        System.out.println("removed element : " + removedele);
//
//        System.out.println(q);
//
//        // To view the head of queue
//        int head = q.peek();
//        System.out.println("head of queue : " + head);
//
//        // Rest all methods of collection
//        // interface like size and contains
//        // can be used with this
//        // implementation.
//        Integer x = q.poll();
//        System.out.println("x : " + x);
//        x = q.poll();
//        System.out.println("x : " + x);
//        x = q.poll();
//        System.out.println("x : " + x);
//        x = q.poll();
//        System.out.println("x : " + x);
//        x = q.poll();
//        System.out.println("x : " + x);
//
//        int size = q.size();
//        System.out.println("Size of queue : " + size);
        //--------------------------------------------

//        OutputStream out = new FileOutputStream("Cloud\\client1\\ss.txt");
//        Thread.sleep(5000);
//        byte[] bytes = new byte[2000000000];
//        out.write(bytes);
//        out.flush();
//        out.close();
        //---------------------------------------------
//        FolderListener fl = new FolderListener();
//        WatchFolder w = new WatchFolder("Cloud\\client1", fl);
//        w.start();
//        System.out.println("w.watchID : " + w.watchID);
//        //w.folderListener.pause = true;
//        boolean x = JNotify.removeWatch(w.watchID);
//        System.out.println("x : " + x);
//        File f = new File("Cloud\\client1\\ss.txt");
//        //Files.delete(Paths.get("Cloud\\client1\\ss.txt"));
//        f.renameTo(new File("Cloud\\client1\\ss1122.txt"));
//        System.out.println("rename finished");
//        //w.folderListener.pause = false;
//        w.watchID = JNotify.addWatch(w.path, w.mask, true, w.folderListener);
//        System.out.println("w.watchID : " + w.watchID);
//        f = new File("Cloud\\client1\\ss1122.txt");
//        f.renameTo(new File("Cloud\\client1\\mm.txt"));
        //----------------------------------------------
//        File file = new File("E:\\features.xlsx");
//
//        //open file
//        if (file.exists()) {
//            Runtime.getRuntime().exec("cmd /c start E:\\" + file.getName());
//        }
//
//        //close and delete a open file
//        Runtime.getRuntime().exec(
//                "cmd /c taskkill /f /im excel.exe");  //put "winword.exe" for ms word file
//
//        new Thread(new Runnable() {
//            @Override
//            public void run() {
//
//                try {
//                    Thread.currentThread().sleep(2000);
//                    file.delete();
//
//                } catch (InterruptedException e) {
//
//                    e.printStackTrace();
//                }
//            }
//        }).start();
//        File file = new File("Cloud\\client1\\love.png");
//        boolean fileIsLocked = !file.renameTo(file);
//        System.out.println("fileIsLocked = " + fileIsLocked);
//
//        try {
//
//            FileOutputStream fileOutputStream = new FileOutputStream(file, true);
//            System.out.println(" file closed ");
//        } catch (Exception e) {
//
//            System.out.println(" file opened ");
//        }
//        File file = new File("Cloud\\client1\\ss.txt");
//        FileChannel channel = new RandomAccessFile(file, "rw").getChannel();
//
//        FileLock lock = channel.lock();
//        try {
//            lock = channel.tryLock();
//            System.out.println("file is not locked");
//        } catch (OverlappingFileLockException e) {
//            System.out.println("file is locked");
//        } finally {
//            lock.release();
//        }
//        try {
//            File f = new File("Cloud\\client1\\a.docx");
//            //f.createNewFile();
//            System.out.println("The file can be read? " + f.canWrite());
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
    }
}
